{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x510F32351677B5c9BbbAA1418ca8731a310f42D0",
    "txHash": "0xd2211d969f809b86bd4a8f11b7e3f97cd8eb06d8308d8dcd262c821ad40ca4df"
  },
  "proxies": [
    {
      "address": "0xF21ae831ae7D41B2F06023a99a914f511c2F7A34",
      "txHash": "0xd6bb7d8b51128a595cfd5dbaa59d97095e001051a16c8f72824016e7502f5480",
      "kind": "transparent"
    },
    {
      "address": "0x26d854efc058a7a552c94297757FCee361B6a524",
      "txHash": "0xbc8cd8da2f242314e114397a7e76475de0fffefb0bdd2b12170aaf4761025760",
      "kind": "transparent"
    },
    {
      "address": "0x1Fc8b43D78f9f5Fa8F0eAf98e94ac46c91363C47",
      "txHash": "0xaa334f5882f872b81516c63acade1b471c611c88a2de096cd1c0174aea090a9d",
      "kind": "transparent"
    },
    {
      "address": "0x02B2be5f2D8F47D4e54d32DE9c7CC23E4538a359",
      "txHash": "0xdaeadf63f5719eff7ec5f9d654eb4b73766a55e0b44f1096ae17174d75662b5d",
      "kind": "transparent"
    },
    {
      "address": "0x5E0275817D4C3a42c736600928FFa16Da6b4fBd4",
      "txHash": "0x0b5b1c8e9c93c2edf15f47e34d64e152200a0e31300e1073990d89e303fdbcaf",
      "kind": "transparent"
    },
    {
      "address": "0x355c5F5ffA7e8a7DCE1Dc21f7453756a128C9bA4",
      "txHash": "0xff95bbbb361143d3e21a15da52be8339e040866385ccc943a3cdeb62e279d998",
      "kind": "transparent"
    },
    {
      "address": "0x98638a3eA2058f4879797822301185F6be2A168a",
      "txHash": "0xa5b154139d4fe5f2e18cb3359556a45137990944fcf18d81408254edb09ba528",
      "kind": "transparent"
    },
    {
      "address": "0x78A77967b521A3e92e34Ccd52438c0Cb2815E898",
      "txHash": "0x8f0e6281c95e4a38df9e9ba6ecc5b9d5a94cd999f23b99d7d8928a04e531d5a5",
      "kind": "transparent"
    },
    {
      "address": "0x9f2Bdf0a2902573dD6949635dA36e6611261266B",
      "txHash": "0xb31601316f9b8fa4bfae46bc3f27c634772cd400c88e4a88fd13212410abd313",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d97706774206721a7147605b8dd274bd3490bdbe02b75e531aa9c409b47193ac": {
      "address": "0x15890f30dEF32A3b5d3bF224994fEBD73C9d563F",
      "txHash": "0x2d9f69caf8aa7123549a8a25f6caea253386b9db1f41d9253b6ec5070a9ab7bb",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:15"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4f29fdc53be4cf7c229c8f8fa89e46dc5c09a7aa54364988d468e43895d531c8": {
      "address": "0x8494E079B5dbd19c5b749a9f3D039e4F7d0FE3d6",
      "txHash": "0x968bc92cd8b79d264ccb5120a9360c2adbe64d5a6b1fc6c4bfa5ed3af935ea7e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)17429_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)16688_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)16701_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)16701_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)17473_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "validatorAddressesByModel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(AddressSet)17473_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)17473_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(AddressSet)17473_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(AddressSet)17473_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)16786_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "validatorUnstakeRequests",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)16786_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_struct(Inference)16761_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Assignment)16725_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_struct(Uint256Set)17643_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)17643_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "validatorDisputed",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)16683_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "minerTaskCompleted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "validatorMinimumStake",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "feePercentage",
            "offset": 20,
            "slot": "25",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "miningTimeLimit",
            "offset": 22,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "validatingTimeLimit",
            "offset": 27,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "disputingTimeLimit",
            "offset": 0,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 10,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "minerRequirement",
            "offset": 15,
            "slot": "26",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:54"
          },
          {
            "label": "maximumTier",
            "offset": 16,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:56"
          },
          {
            "label": "disqualificationPercentage",
            "offset": 18,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:57"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "27",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "28",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:62"
          },
          {
            "label": "rewardPerEpochBasedOnPerf",
            "offset": 0,
            "slot": "29",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:63"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "30",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "finePercentage",
            "offset": 0,
            "slot": "31",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:67"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "32",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:70"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "33",
            "type": "t_mapping(t_address,t_struct(Boost)16795_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "34",
            "type": "t_array(t_uint256)97_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:75"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "131",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "131",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "132",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "182",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "183",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "233",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "282",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "283",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)97_storage": {
            "label": "uint256[97]",
            "numberOfBytes": "3104"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(InferenceStatus)16674": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Disputing",
              "Solved",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)17473_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)16795_storage)": {
            "label": "mapping(address => struct IWorkerHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)16688_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)17643_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)16786_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)16701_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)16725_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)16761_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)16683_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)17643_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)17473_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)16725_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disapprovalCount",
                "type": "t_uint8",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Boost)16795_storage": {
            "label": "struct IWorkerHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Inference)16761_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disputingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expiredAt",
                "type": "t_uint40",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "firstSubmissionId",
                "type": "t_uint8",
                "offset": 25,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)16674",
                "offset": 26,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MinerEpochState)16683_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)16688_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)17429_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)17643_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)16786_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)16701_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "dcb480202f9f33f047a83a0ac13c14a7510d951801eba3ffd07a5cda183c9a96": {
      "address": "0x4b51451dC10ebF1CD99218B442F7AAD44C51717f",
      "txHash": "0x70e884a8e3dc6ee57c4b194acb072fd57fd8a8fac13e0f2006d5d332970afa99",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "identifier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:7"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:9"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:10"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:14"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "54",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "54",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2438ecca9f6988e3fa02916a2eac772880b1b592ab045cc867ce7f1a76437c58": {
      "address": "0x51045E1889eEDb3B1b01dc0C8356072e617a2B23",
      "txHash": "0x61ec43d6c5dd1e3dc569f49dc33db89098717108344df72764d0a6b727233e5e",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:15"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "c9648189b33ecd9988079c83056e367bc368f7961f1ea00707f518036bdd0bfa": {
      "address": "0xAdE2F1A0228aeFd86b2537CDcA340B8B5de9AbE8",
      "txHash": "0x27f78f7134db845c6e02ac1f901f0df47b23f0e230c8b8de4b00e2fea09e9b58",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)12966_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)12225_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)12238_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)12238_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)13010_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "validatorAddressesByModel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(AddressSet)13010_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)13010_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(AddressSet)13010_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(AddressSet)13010_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)12323_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "validatorUnstakeRequests",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)12323_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_struct(Inference)12298_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Assignment)12262_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_struct(Uint256Set)13180_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)13180_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "validatorDisputed",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)12220_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "minerTaskCompleted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "validatorMinimumStake",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "feePercentage",
            "offset": 20,
            "slot": "25",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "miningTimeLimit",
            "offset": 22,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "validatingTimeLimit",
            "offset": 27,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "disputingTimeLimit",
            "offset": 0,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 10,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "minerRequirement",
            "offset": 15,
            "slot": "26",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:54"
          },
          {
            "label": "maximumTier",
            "offset": 16,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:56"
          },
          {
            "label": "disqualificationPercentage",
            "offset": 18,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:57"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "27",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "28",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:62"
          },
          {
            "label": "rewardPerEpochBasedOnPerf",
            "offset": 0,
            "slot": "29",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:63"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "30",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "finePercentage",
            "offset": 0,
            "slot": "31",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:67"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "32",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:70"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "33",
            "type": "t_mapping(t_address,t_struct(Boost)12332_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:73"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "34",
            "type": "t_array(t_uint256)97_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:75"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "131",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "131",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "132",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "182",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "183",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "233",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "282",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "283",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)97_storage": {
            "label": "uint256[97]",
            "numberOfBytes": "3104"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(InferenceStatus)12211": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Disputing",
              "Solved",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)13010_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)12332_storage)": {
            "label": "mapping(address => struct IWorkerHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)12225_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)13180_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)12323_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)12238_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)12262_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)12298_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)12220_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)13180_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)13010_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)12262_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disapprovalCount",
                "type": "t_uint8",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Boost)12332_storage": {
            "label": "struct IWorkerHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Inference)12298_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disputingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expiredAt",
                "type": "t_uint40",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "firstSubmissionId",
                "type": "t_uint8",
                "offset": 25,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)12211",
                "offset": 26,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MinerEpochState)12220_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)12225_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)12966_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)13180_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)12323_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)12238_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
