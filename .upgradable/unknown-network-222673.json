{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x1aEC04773dACc260923224C4234D8019f2ED4F0f",
    "txHash": "0xffed987b3f37694f3f523b55d1dfa0e38e7e7deb5168aaf6acd1e447335358c2"
  },
  "proxies": [
    {
      "address": "0x5211b000CCe15fd7aC100E75a157a876dd30bef0",
      "txHash": "0x71b46775f469f740722c9ffa6750e04f06b3076059f99b2a304fa46cd00087ba",
      "kind": "transparent"
    },
    {
      "address": "0x0B8fc366C27b8E2Ca8D99e569D8628c0D3351E94",
      "txHash": "0x5b9adf7af9c1415bec6351f89a1f4d583557c80116025a6efedc00e2e5d4799f",
      "kind": "transparent"
    },
    {
      "address": "0x87e9B8630c1E20dd86451AE15aF7663D006f089c",
      "txHash": "0xb10f49d4b2fbbb0d7df64f333d534cf605235c79154b64beee1c30b8607fa333",
      "kind": "transparent"
    },
    {
      "address": "0x97c671381daBAe0ae24554120dcE2E9B0baEb3CD",
      "txHash": "0xdf3205c7b6ee31dfd22b6e70e98206a754ea96782aeeb008f67770f0ae6951ab",
      "kind": "transparent"
    },
    {
      "address": "0x6Ee733b0923aC74d605FbD651b412bd0849A15f5",
      "txHash": "0xfe260bca03b2ebef36f3872f00912edd98b9491da7d0a841feb892da1dcd42e2",
      "kind": "transparent"
    },
    {
      "address": "0x2fDF1e58F61EDE27A1BEa5E329A68dcfB081968b",
      "txHash": "0x7db709bb35c0b108ce3ba8991735ab196ecccc0ad3451fe04a23c0ac3c55d109",
      "kind": "transparent"
    },
    {
      "address": "0xFeb1Db71f0Ff062A2e257b4e6a7209E9d5e6Ce87",
      "txHash": "0xea0359839d2a5c7da1b9ca7754d14ca79ff339f27b1ee8be39f99ef5cd3099a9",
      "kind": "transparent"
    },
    {
      "address": "0x430583bDFf80c5BE1536Ed82f9c8090eEF68e2F6",
      "txHash": "0x8b52e591a541bd70901b1d1c7843081d05827df26e5b117332d3cb4586f1b71d",
      "kind": "transparent"
    },
    {
      "address": "0x747d9e388D71C11F1E69B556e10F50DbbE4C2D3b",
      "txHash": "0xf9d763e3c04c6bdedb3a33f7fb150c6196d7733034203c3138b575e933133928",
      "kind": "transparent"
    },
    {
      "address": "0x9874732a8699FcA824A9A7d948f6bcD30a141238",
      "txHash": "0xc53a9a8c62437b3970c50df3d39d13d16dd89d0826df153187aa6562fe0119e4",
      "kind": "transparent"
    }
  ],
  "impls": {
    "6aaaf3fecc464f28a380f0858612ddf5891a537e19c426fb93b1943613f17459": {
      "address": "0x357748E7c54440D18a778D3d98C76930F21b1ffd",
      "txHash": "0x9b3e41f703e23460b6d250acda413e9814871d7e92a296b74e4518dc614ba67d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWorkerHub)18369",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:10"
          },
          {
            "label": "MAX_SUPPLY_CAP",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)100_storage",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IWorkerHub)18369": {
            "label": "contract IWorkerHub",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5bb893fcc7774a2994ec734f2d86c0279f48c8df761f2f87f3f309ec8d5674f6": {
      "address": "0xC6C5cA43AcBF0ba1244F7e92b93318b0872c093f",
      "txHash": "0xbd4d5ed40f4430b49fa5435e26e8ef7da95b18a21c6228fd049b5e951a4c1cc3",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)100_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "21b8d969179d154184ad826f18eba3b732fba41591d5fef73031468b71b62746": {
      "address": "0x247D4C9a7b9175B133c0dF176b35eda449a46c57",
      "txHash": "0x0e8cbc7b40afa51c740e27382671795a1e33e1a19ceb70002223b426b4685093",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)18755_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)17894_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)17907_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(AddressSet)18799_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(AddressSet)18799_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)18799_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)18017_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:22"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(Inference)17989_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:25"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(Assignment)17941_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "votingInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_struct(VotingInfo)17994_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "digests",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(Bytes32Set)19139_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:28"
          },
          {
            "label": "countDigest",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_struct(Uint256Set)18969_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)18969_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)17889_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:35"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:42"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "20",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "21",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:44"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "21",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "penaltyDuration",
            "offset": 10,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 15,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "minerRequirement",
            "offset": 20,
            "slot": "22",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "maximumTier",
            "offset": 21,
            "slot": "22",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:55"
          },
          {
            "label": "currentEpoch",
            "offset": 23,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:58"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:59"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "25",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "finePercentage",
            "offset": 0,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "27",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:67"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "28",
            "type": "t_mapping(t_address,t_struct(Boost)18026_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:70"
          },
          {
            "label": "isReferrer",
            "offset": 0,
            "slot": "29",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:72"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "30",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:73"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "31",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:74"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "32",
            "type": "t_struct(DAOTokenPercentage)18037_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:75"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "33",
            "type": "t_mapping(t_address,t_address)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:77"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "34",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:78"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "35",
            "type": "t_array(t_uint256)98_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:79"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "133",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "133",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "134",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "184",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "185",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "234",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "235",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "284",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "285",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)98_storage": {
            "label": "uint256[98]",
            "numberOfBytes": "3136"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(AssignmentRole)17876": {
            "label": "enum IWorkerHub.AssignmentRole",
            "members": [
              "Nil",
              "Validating",
              "Mining"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)17872": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Vote)17880": {
            "label": "enum IWorkerHub.Vote",
            "members": [
              "Nil",
              "Disapproval",
              "Approval"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)18799_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)18026_storage)": {
            "label": "mapping(address => struct IWorkerHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)17894_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)18969_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)18017_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)17907_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)17941_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bytes32Set)19139_storage)": {
            "label": "mapping(uint256 => struct Set.Bytes32Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)17989_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)17889_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)18969_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingInfo)17994_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.VotingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)18799_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)17941_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revealNonce",
                "type": "t_uint40",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 5,
                "slot": "3"
              },
              {
                "label": "role",
                "type": "t_enum(AssignmentRole)17876",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "vote",
                "type": "t_enum(Vote)17880",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Boost)18026_storage": {
            "label": "struct IWorkerHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Set)19139_storage": {
            "label": "struct Set.Bytes32Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DAOTokenPercentage)18037_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Inference)17989_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "commitTimeout",
                "type": "t_uint40",
                "offset": 25,
                "slot": "5"
              },
              {
                "label": "revealTimeout",
                "type": "t_uint40",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)17872",
                "offset": 5,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 6,
                "slot": "6"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(MinerEpochState)17889_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)17894_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)18755_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)18969_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)18017_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VotingInfo)17994_storage": {
            "label": "struct IWorkerHub.VotingInfo",
            "members": [
              {
                "label": "totalCommit",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalReveal",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Worker)17907_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2438ecca9f6988e3fa02916a2eac772880b1b592ab045cc867ce7f1a76437c58": {
      "address": "0xeeB07f6EE3573d653Ed2e1105e7Ff67dA67CC14A",
      "txHash": "0xdcfbb9c413ca5172c6c7100bc2bc2fbf4da0ac22afd0411948cfb6ee17acba5d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:15"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e5b0287fff952fc5d54192e5a42376d66378ad2f09fb377f7065eb8b500dec8e": {
      "address": "0xF2538FD1Bd5c6C0B1fAfA22fE578ca6a6304D79d",
      "txHash": "0x742dcb50fbef4f76b6d43f2665b508612e54677d82d6b16127a09a2e2fdaf504",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "identifier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:7"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:9"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:10"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:12"
          },
          {
            "label": "modelCollection",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:15"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "54",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "54",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4a7ddea04cb48b12c28631f8a8d8130ce50e9267c3de39a191b4f90d5aec992d": {
      "address": "0xe3a7EbCe66b4C3bF0DaEB819f1ede54d5c3fdE8c",
      "txHash": "0x4222f6582d508ee24d08633eed98f53f153adf33687a3cc2bd60d4a863bd43d1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)6186_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)5706_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)5719_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(AddressSet)6230_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(AddressSet)6230_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)6230_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)5829_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:22"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(Inference)5801_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:25"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_uint256,t_struct(Assignment)5753_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "votingInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_uint256,t_struct(VotingInfo)5806_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "digests",
            "offset": 0,
            "slot": "14",
            "type": "t_mapping(t_uint256,t_struct(Bytes32Set)6570_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:28"
          },
          {
            "label": "countDigest",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_struct(Uint256Set)6400_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)6400_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)5701_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:35"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "19",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:42"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "20",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "21",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:44"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "21",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "21",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "penaltyDuration",
            "offset": 10,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 15,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "minerRequirement",
            "offset": 20,
            "slot": "22",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "maximumTier",
            "offset": 21,
            "slot": "22",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:55"
          },
          {
            "label": "currentEpoch",
            "offset": 23,
            "slot": "22",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:58"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:59"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "25",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "finePercentage",
            "offset": 0,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "27",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:67"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "28",
            "type": "t_mapping(t_address,t_struct(Boost)5838_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:70"
          },
          {
            "label": "isReferrer",
            "offset": 0,
            "slot": "29",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:72"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "30",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:73"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "31",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:74"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "32",
            "type": "t_struct(DAOTokenPercentage)5849_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:75"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "33",
            "type": "t_mapping(t_address,t_address)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:77"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "34",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:78"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "35",
            "type": "t_array(t_uint256)98_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:79"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "133",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "133",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "134",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "184",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "185",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "234",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "235",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "284",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "285",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)98_storage": {
            "label": "uint256[98]",
            "numberOfBytes": "3136"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(AssignmentRole)5688": {
            "label": "enum IWorkerHub.AssignmentRole",
            "members": [
              "Nil",
              "Validating",
              "Mining"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)5684": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Vote)5692": {
            "label": "enum IWorkerHub.Vote",
            "members": [
              "Nil",
              "Disapproval",
              "Approval"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)6230_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)5838_storage)": {
            "label": "mapping(address => struct IWorkerHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)5706_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)6400_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)5829_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)5719_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)5753_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bytes32Set)6570_storage)": {
            "label": "mapping(uint256 => struct Set.Bytes32Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)5801_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)5701_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)6400_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingInfo)5806_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.VotingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)6230_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)5753_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revealNonce",
                "type": "t_uint40",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 5,
                "slot": "3"
              },
              {
                "label": "role",
                "type": "t_enum(AssignmentRole)5688",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "vote",
                "type": "t_enum(Vote)5692",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Boost)5838_storage": {
            "label": "struct IWorkerHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Bytes32Set)6570_storage": {
            "label": "struct Set.Bytes32Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DAOTokenPercentage)5849_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Inference)5801_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "commitTimeout",
                "type": "t_uint40",
                "offset": 25,
                "slot": "5"
              },
              {
                "label": "revealTimeout",
                "type": "t_uint40",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)5684",
                "offset": 5,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 6,
                "slot": "6"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(MinerEpochState)5701_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)5706_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)6186_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)6400_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)5829_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VotingInfo)5806_storage": {
            "label": "struct IWorkerHub.VotingInfo",
            "members": [
              {
                "label": "totalCommit",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalReveal",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Worker)5719_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
