{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xD261fb5D8fA1a96d3B1f2bC2C79580BC363E9059",
    "txHash": "0xcc118e38ca17636a387927af961cf0442b8ce40eff3d66d482d9b74e4475db8e"
  },
  "proxies": [
    {
      "address": "0x05726BF187938c06d6C832dc493E3Df70fe735c8",
      "txHash": "0x0e2a37959f11ef671cbf17c103d47da29d86a0df78be42c8069c1a4ef6b6305d",
      "kind": "transparent"
    },
    {
      "address": "0xB0e91e2Aa27330434Bfc33fF5314C796eD3Ad3c6",
      "txHash": "0x9ba204c9d0ce1c4005839950b5a6722ee3d1174c8684ae4eedad45d83ba9f792",
      "kind": "transparent"
    },
    {
      "address": "0xb641b7b99b1d03B629b65D0059E3cEE391B6D352",
      "txHash": "0x00a2da96987006f6a30de0874ec21014fbc1f6306985fc0767c644deb4aa78fb",
      "kind": "transparent"
    },
    {
      "address": "0x3a269D64057314E7D0E9F4164077FF57fBDb93f9",
      "txHash": "0x0bc79a2406868146e9db662459fb90a80ddc2e51d0a8a2cb0ad5132e6796be60",
      "kind": "transparent"
    }
  ],
  "impls": {
    "cc39c392217c1bb24c515b641c4c643f71fe0fcec761330c7f56de14dc02ed48": {
      "address": "0x4310D19bAFb2EB9C04204E1193253262fBC67dC2",
      "txHash": "0xb68964561e6b4a3a113592640a5a473eb80898b87dc32e69b6f1876c88f73e6c",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3681_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)3388_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)3401_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3401_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)3725_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "validatorAddressesByModel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(AddressSet)3725_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)3725_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(AddressSet)3725_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(AddressSet)3725_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3486_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "validatorUnstakeRequests",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3486_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_struct(Inference)3461_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3425_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_struct(Uint256Set)3895_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)3895_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "validatorDisputed",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3383_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "minerTaskCompleted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "validatorMinimumStake",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "feePercentage",
            "offset": 20,
            "slot": "25",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "miningTimeLimit",
            "offset": 22,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "validatingTimeLimit",
            "offset": 27,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "disputingTimeLimit",
            "offset": 0,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 10,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "minerRequirement",
            "offset": 15,
            "slot": "26",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:54"
          },
          {
            "label": "maximumTier",
            "offset": 16,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:56"
          },
          {
            "label": "disqualificationPercentage",
            "offset": 18,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:57"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "27",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "28",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:62"
          },
          {
            "label": "rewardPerEpochBasedOnPerf",
            "offset": 0,
            "slot": "29",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:63"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "30",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "31",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:66"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "131",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "131",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "132",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "182",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "183",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "233",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "282",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "283",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(InferenceStatus)3374": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Disputing",
              "Solved",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)3725_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3388_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)3895_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3486_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3401_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3425_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3461_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3383_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)3895_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3725_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)3425_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disapprovalCount",
                "type": "t_uint8",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3461_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disputingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expiredAt",
                "type": "t_uint40",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "firstSubmissionId",
                "type": "t_uint8",
                "offset": 25,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3374",
                "offset": 26,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MinerEpochState)3383_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3388_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)3681_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)3895_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)3486_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3401_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d26b765071ecc975c2331a608327b23e8c7633e8ead1e079225a5f115f94c5db": {
      "address": "0xc1eF380E348F5AE8fC1523F67Ba1A1d4fDfDea42",
      "txHash": "0x129c431540a63d1c26dcac491e5f93b45fd9eaea878fa6f933146ec888bbef7d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "4d697a02bf64cd7d91de33c2b9aeaeeaf81999c770974b24d232b8e8eb754178": {
      "address": "0x5C24921d52632F80c4B269b236F75C7388CD3a26",
      "txHash": "0x8d85f56296c0e5a2623c5c457596a11b0961120a438d2c67bec51b1e2e66ad96",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3712_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)3419_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)3432_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3432_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)3756_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "validatorAddressesByModel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(AddressSet)3756_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "validatorUnstakeRequests",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_struct(Inference)3492_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3456_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_struct(Uint256Set)3926_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)3926_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "validatorDisputed",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3414_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "minerTaskCompleted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "validatorMinimumStake",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "feePercentage",
            "offset": 20,
            "slot": "25",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "miningTimeLimit",
            "offset": 22,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "validatingTimeLimit",
            "offset": 27,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "disputingTimeLimit",
            "offset": 0,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 10,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "minerRequirement",
            "offset": 15,
            "slot": "26",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:54"
          },
          {
            "label": "maximumTier",
            "offset": 16,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:56"
          },
          {
            "label": "disqualificationPercentage",
            "offset": 18,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:57"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "27",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "28",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:62"
          },
          {
            "label": "rewardPerEpochBasedOnPerf",
            "offset": 0,
            "slot": "29",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:63"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "30",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "31",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:66"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "131",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "131",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "132",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "182",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "183",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "233",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "282",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "283",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(InferenceStatus)3405": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Disputing",
              "Solved",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)3756_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3419_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)3926_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3432_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3456_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3492_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3414_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)3926_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3756_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)3456_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disapprovalCount",
                "type": "t_uint8",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3492_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disputingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expiredAt",
                "type": "t_uint40",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "firstSubmissionId",
                "type": "t_uint8",
                "offset": 25,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3405",
                "offset": 26,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MinerEpochState)3414_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3419_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)3712_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)3926_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)3517_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3432_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "f10ca3d3139c18ba9beb4e2ce264d1d1f404fa1bb707289cfcb83b267b1a1ecf": {
      "address": "0xCC6C5e04340F799047B15d6c63b7936F0010AB27",
      "txHash": "0xf30d32de3062bf64556d446f790dc84b584e08925f04c3031f47d2dd299fcc5d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3712_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_struct(Model)3419_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Worker)3432_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3432_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)3756_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "validatorAddressesByModel",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(AddressSet)3756_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "6",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "validatorAddresses",
            "offset": 0,
            "slot": "10",
            "type": "t_struct(AddressSet)3756_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "validatorUnstakeRequests",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_uint256,t_struct(Inference)3492_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "16",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3456_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "18",
            "type": "t_mapping(t_address,t_struct(Uint256Set)3926_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:31"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "19",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)3926_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "validatorDisputed",
            "offset": 0,
            "slot": "20",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "21",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3414_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "minerTaskCompleted",
            "offset": 0,
            "slot": "22",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "23",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "validatorMinimumStake",
            "offset": 0,
            "slot": "24",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:46"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "25",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:47"
          },
          {
            "label": "feePercentage",
            "offset": 20,
            "slot": "25",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:48"
          },
          {
            "label": "miningTimeLimit",
            "offset": 22,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:49"
          },
          {
            "label": "validatingTimeLimit",
            "offset": 27,
            "slot": "25",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:50"
          },
          {
            "label": "disputingTimeLimit",
            "offset": 0,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:51"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:52"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 10,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:53"
          },
          {
            "label": "minerRequirement",
            "offset": 15,
            "slot": "26",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:54"
          },
          {
            "label": "maximumTier",
            "offset": 16,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:56"
          },
          {
            "label": "disqualificationPercentage",
            "offset": 18,
            "slot": "26",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:57"
          },
          {
            "label": "currentEpoch",
            "offset": 20,
            "slot": "26",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:60"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "27",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:61"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "28",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:62"
          },
          {
            "label": "rewardPerEpochBasedOnPerf",
            "offset": 0,
            "slot": "29",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:63"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "30",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:64"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "31",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:66"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "131",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "131",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "132",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "182",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "183",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "232",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "233",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "282",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "283",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(InferenceStatus)3405": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Disputing",
              "Solved",
              "Killed"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(AddressSet)3756_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3419_storage)": {
            "label": "mapping(address => struct IWorkerHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)3926_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3517_storage)": {
            "label": "mapping(address => struct IWorkerHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3432_storage)": {
            "label": "mapping(address => struct IWorkerHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3456_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3492_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3414_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)3926_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3756_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Assignment)3456_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disapprovalCount",
                "type": "t_uint8",
                "offset": 20,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3492_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "disputingAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "expiredAt",
                "type": "t_uint40",
                "offset": 20,
                "slot": "4"
              },
              {
                "label": "firstSubmissionId",
                "type": "t_uint8",
                "offset": 25,
                "slot": "4"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3405",
                "offset": 26,
                "slot": "4"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(MinerEpochState)3414_storage": {
            "label": "struct IWorkerHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3419_storage": {
            "label": "struct IWorkerHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)3712_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)3926_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UnstakeRequest)3517_storage": {
            "label": "struct IWorkerHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3432_storage": {
            "label": "struct IWorkerHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "1cc68a4b936075964a6e1e210ff8e3416c25bda0344074d86f45fb18126a65b8": {
      "address": "0xa7b24497714E87FaFE9D5eD3472a98eB8C4a67FA",
      "txHash": "0xd427c6f599a5d5d4cf5f4c3f7c497a4605aadcbcc243797e137e9aade3e50a9d",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "identifier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:7"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:9"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:10"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:12"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:14"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "54",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "54",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
