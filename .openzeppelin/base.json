{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x2Fb0108F90724f63da4360D39C588124Eaeb3f7d",
      "txHash": "0x5da8f6fa17bc52cf69d179576202b319fee2efeaedc6ef12bf944a0b5cbad9a3",
      "kind": "transparent"
    },
    {
      "address": "0x3eda761C5a06aF51aa67358227Fa7271Ba9111b3",
      "txHash": "0xb7e00db7ef7557018f7269d474a8430e75571e3e0af0afd3cbf2e51f2c274bc6",
      "kind": "transparent"
    },
    {
      "address": "0x233198ce0679d3D8B3B346b9fe3DFD3298B991EB",
      "txHash": "0x65aeb00d849052cf8219bb00cc73b7ebb0c41ad265cbe1cf08dd1a614b4eaf2a",
      "kind": "transparent"
    },
    {
      "address": "0xA1d2F74C345Ff1d97B8FC72E061903cD84C66F69",
      "txHash": "0x709a1dba634d39799ec18203d043c33fcf71c00dba51c65d46032652fceb9faa",
      "kind": "transparent"
    },
    {
      "address": "0x1E4C5B7a0568a2cb96BeBE5C70472C140Fc847A0",
      "txHash": "0x64bfc17be1e2106408edb0829ca8042e91a61a07fe76e68f9cfbbeda0b1d4369",
      "kind": "transparent"
    },
    {
      "address": "0x9A35863BaF0df7623F34FCF3376CDBAC8581E76b",
      "txHash": "0x7523f80b1fb6a2a46acf3571910ba2947727c35fed1932703942f4301c722540",
      "kind": "transparent"
    },
    {
      "address": "0xAed016e060e2fFE3092916b1650Fc558D62e1CCC",
      "txHash": "0xfff324edbf174094ab200ff78f3ea3151425aa85f75d1b2ae140aecbc5c2bbc8",
      "kind": "transparent"
    }
  ],
  "impls": {
    "aae1be864169a2d65b34c2b1fd64ab955f201ca7e5f079bc9b4cbb86136cc379": {
      "address": "0x129083DA220B21E7A3e9E76c23f87BEdB86A0432",
      "txHash": "0x5589d825b4aa9b057eaffb2eb08ffcd9a3e782a53734f1872de954ede3d35b2b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWorkerHub)11832",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:10"
          },
          {
            "label": "MAX_SUPPLY_CAP",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)100_storage",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IWorkerHub)11832": {
            "label": "contract IWorkerHub",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7d9d2e275d49150ede39864b97154beb41566b2149228b95e457f97ae38a48fa": {
      "address": "0xF693391da10D31a3de41cd789AF23A0041e81ac4",
      "txHash": "0xa48d346d29d4c2f8f1150f27879864718ec6910fce67ec1ff08f2182e5ad9c50",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)100_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "00e1383b83364d70e62e76301efbf8e9d83b0569748ea89f6c1f6b0bd5934e26": {
      "address": "0x49F9d43c33CD43F6A74CE54fB06864b510a6Cd90",
      "txHash": "0xd8559081b9bf2cd854d579073d7a66106b423654d221894d04eacd1eac78a9d1",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3502_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:10"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:11"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Model)3016_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:13"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3029_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)3546_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(AddressSet)3546_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(AddressSet)3546_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3034_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:20"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3011_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:21"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:23"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:24"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:25"
          },
          {
            "label": "finePercentage",
            "offset": 10,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:26"
          },
          {
            "label": "maximumTier",
            "offset": 12,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:27"
          },
          {
            "label": "currentEpoch",
            "offset": 14,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:30"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:31"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:32"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:33"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:36"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(Boost)3043_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:39"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:40"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "19",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:41"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "21",
            "type": "t_array(t_uint256)100_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:44"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "121",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "121",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "172",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "222",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(AddressSet)3546_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)3043_storage)": {
            "label": "mapping(address => struct IStakingHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3016_storage)": {
            "label": "mapping(address => struct IStakingHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3034_storage)": {
            "label": "mapping(address => struct IStakingHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3029_storage)": {
            "label": "mapping(address => struct IStakingHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3011_storage)": {
            "label": "mapping(uint256 => struct IStakingHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3546_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Boost)3043_storage": {
            "label": "struct IStakingHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MinerEpochState)3011_storage": {
            "label": "struct IStakingHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3016_storage": {
            "label": "struct IStakingHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)3502_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)3034_storage": {
            "label": "struct IStakingHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3029_storage": {
            "label": "struct IStakingHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "738727323468dd3f43f9aa4f65fcb35ceb4134bb9b3a1db72cd93e1354387893": {
      "address": "0x80c97CF3cb1Cce96Ef50AE80Eae1903Edbfc7C13",
      "txHash": "0x418ab7a22a0c21b18a66990bc077a38d3b1a5832daf396e3e6d59ccff5323686",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3898_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Inference)3696_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:15"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3648_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "votingInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(VotingInfo)3701_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "digests",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(Bytes32Set)4282_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:18"
          },
          {
            "label": "countDigest",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(Uint256Set)4112_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)4112_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:25"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "11",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:28"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "minerRequirement",
            "offset": 10,
            "slot": "12",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "daoToken",
            "offset": 11,
            "slot": "12",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:35"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(DAOTokenPercentage)3730_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:36"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_address)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "daoReceiversInfo",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3828_storage)dyn_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:40"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "17",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:42"
          },
          {
            "label": "stakingHub",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "19",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "119",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "119",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "120",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "170",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "171",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "220",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "221",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "270",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "271",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(DAOTokenReceiverInfor)3828_storage)dyn_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(AssignmentRole)3625": {
            "label": "enum IWorkerHub.AssignmentRole",
            "members": [
              "Nil",
              "Validating",
              "Mining"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DAOTokenReceiverRole)3820": {
            "label": "enum IWorkerHub.DAOTokenReceiverRole",
            "members": [
              "Miner",
              "Validator",
              "User",
              "Referrer",
              "Referee",
              "L2Owner"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)3621": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed",
              "Transferred"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Vote)3629": {
            "label": "enum IWorkerHub.Vote",
            "members": [
              "Nil",
              "Disapproval",
              "Approval"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)4112_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3828_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.DAOTokenReceiverInfor[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3648_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bytes32Set)4282_storage)": {
            "label": "mapping(uint256 => struct Set.Bytes32Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3696_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)4112_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingInfo)3701_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.VotingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Assignment)3648_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revealNonce",
                "type": "t_uint40",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 5,
                "slot": "3"
              },
              {
                "label": "role",
                "type": "t_enum(AssignmentRole)3625",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "vote",
                "type": "t_enum(Vote)3629",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)4282_storage": {
            "label": "struct Set.Bytes32Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DAOTokenPercentage)3730_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOTokenReceiverInfor)3828_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "role",
                "type": "t_enum(DAOTokenReceiverRole)3820",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3696_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "commitTimeout",
                "type": "t_uint40",
                "offset": 25,
                "slot": "5"
              },
              {
                "label": "revealTimeout",
                "type": "t_uint40",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3621",
                "offset": 5,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 6,
                "slot": "6"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Randomizer)3898_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)4112_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VotingInfo)3701_storage": {
            "label": "struct IWorkerHub.VotingInfo",
            "members": [
              {
                "label": "totalCommit",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalReveal",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2e85ce0e411df4df25a565e95af5c5d5b2ba84a140bc8e39aa3247a0a5ff7546": {
      "address": "0xb2a51f4a3F3A6a0bF653763Bf50830219dc5e62D",
      "txHash": "0x94bd41ab8f756070b9e072f925638f2a5b280cec0b4fe58a5ee40eea0318218b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:15"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5206516fac1b999c337fe7c1734c3b9480d0b2e03f0a51349a3ff48e15d630af": {
      "address": "0xD483fDFBF57Cc73C08FF074A6D37fD4FFF55321C",
      "txHash": "0xbf8688ebcb96002c3cc1a8943c7dd7b59a26ebbe2821c3082406cfff19fcfada",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "identifier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:7"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:9"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:10"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:12"
          },
          {
            "label": "modelCollection",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:15"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "54",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "54",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "bea396717c2ede1a42e36838f90d34ed98f70529f099b3a79293a16e99ca2d77": {
      "address": "0x16465e92C68675b4f775efD1ad830D22d14641bb",
      "txHash": "0xf06117502e68329d91b7198338db589734eb370155efe60df27ffa9c23e7170d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "datas",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(TokenMetaData)11545_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:7"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:13"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:14"
          },
          {
            "label": "hybridModel",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:15"
          },
          {
            "label": "earnedFees",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:18"
          },
          {
            "label": "poolBalance",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:21"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "211",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "213",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "214",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "312",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "462",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetaData)11545_storage)": {
            "label": "mapping(uint256 => struct ISystemPromptManager.TokenMetaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetaData)11545_storage": {
            "label": "struct ISystemPromptManager.TokenMetaData",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sysPrompts",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "ca85ccf25e1234fff0bd550ce53aeb09fe9a69582a1cb53a9f21634dbaf20661": {
      "address": "0xB8CC41366B16C2963bd66F2c240B33F788D80634",
      "txHash": "0x4b7bb12363803f2e0405d70813de9207a865d85251e2f440dfb3270aad8fc387",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3883_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Inference)3681_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:15"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3633_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "votingInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(VotingInfo)3686_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "digests",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(Bytes32Set)4267_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:18"
          },
          {
            "label": "countDigest",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(Uint256Set)4097_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)4097_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:25"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "11",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:28"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "minerRequirement",
            "offset": 10,
            "slot": "12",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "daoToken",
            "offset": 11,
            "slot": "12",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:35"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(DAOTokenPercentage)3715_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:36"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_address)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "daoReceiversInfo",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3813_storage)dyn_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:40"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "17",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:42"
          },
          {
            "label": "stakingHub",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "19",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "119",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "119",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "120",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "170",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "171",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "220",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "221",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "270",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "271",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(DAOTokenReceiverInfor)3813_storage)dyn_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(AssignmentRole)3610": {
            "label": "enum IWorkerHub.AssignmentRole",
            "members": [
              "Nil",
              "Validating",
              "Mining"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DAOTokenReceiverRole)3805": {
            "label": "enum IWorkerHub.DAOTokenReceiverRole",
            "members": [
              "Miner",
              "Validator",
              "User",
              "Referrer",
              "Referee",
              "L2Owner"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)3606": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed",
              "Transferred"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Vote)3614": {
            "label": "enum IWorkerHub.Vote",
            "members": [
              "Nil",
              "Disapproval",
              "Approval"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)4097_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3813_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.DAOTokenReceiverInfor[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3633_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bytes32Set)4267_storage)": {
            "label": "mapping(uint256 => struct Set.Bytes32Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3681_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)4097_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingInfo)3686_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.VotingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Assignment)3633_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revealNonce",
                "type": "t_uint40",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 5,
                "slot": "3"
              },
              {
                "label": "role",
                "type": "t_enum(AssignmentRole)3610",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "vote",
                "type": "t_enum(Vote)3614",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)4267_storage": {
            "label": "struct Set.Bytes32Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DAOTokenPercentage)3715_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOTokenReceiverInfor)3813_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "role",
                "type": "t_enum(DAOTokenReceiverRole)3805",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3681_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "commitTimeout",
                "type": "t_uint40",
                "offset": 25,
                "slot": "5"
              },
              {
                "label": "revealTimeout",
                "type": "t_uint40",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3606",
                "offset": 5,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 6,
                "slot": "6"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Randomizer)3883_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)4097_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VotingInfo)3686_storage": {
            "label": "struct IWorkerHub.VotingInfo",
            "members": [
              {
                "label": "totalCommit",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalReveal",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "cb16bbbf4b4943f165e607738d735bfb582d981eb933408ac54aad2e2c479fda": {
      "address": "0xd0b8aEafB83Bbf856d742630EA25ae39Cc34Cd00",
      "txHash": "0xaf0491dbc10636f45217f924f494418ff1059da9dd3737882276537db64b4a4e",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)11853_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:10"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:11"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Model)11178_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:13"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)11191_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)11897_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(AddressSet)11897_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(AddressSet)11897_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)11196_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:20"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)11173_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:21"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:23"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:24"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:25"
          },
          {
            "label": "finePercentage",
            "offset": 10,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:26"
          },
          {
            "label": "maximumTier",
            "offset": 12,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:27"
          },
          {
            "label": "currentEpoch",
            "offset": 14,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:30"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:31"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:32"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:33"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:36"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(Boost)11205_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:39"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:40"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "19",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:41"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "21",
            "type": "t_array(t_uint256)100_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:44"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "121",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "121",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "172",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "222",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(AddressSet)11897_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)11205_storage)": {
            "label": "mapping(address => struct IStakingHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)11178_storage)": {
            "label": "mapping(address => struct IStakingHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)11196_storage)": {
            "label": "mapping(address => struct IStakingHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)11191_storage)": {
            "label": "mapping(address => struct IStakingHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)11173_storage)": {
            "label": "mapping(uint256 => struct IStakingHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)11897_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Boost)11205_storage": {
            "label": "struct IStakingHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MinerEpochState)11173_storage": {
            "label": "struct IStakingHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)11178_storage": {
            "label": "struct IStakingHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)11853_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)11196_storage": {
            "label": "struct IStakingHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)11191_storage": {
            "label": "struct IStakingHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9f892e329b5cce1413ab962b672e725e353e0bc8520dfad436686b4b6b3741c9": {
      "address": "0xb88C972ecADFa052940ea812B042D5A959EfFA9d",
      "txHash": "0xaf0274273260e8d402825bf555ecc3f6848827394e866aa8a69eabcaa56517d4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "datas",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(TokenMetaData)11561_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:7"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:13"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:14"
          },
          {
            "label": "hybridModel",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:15"
          },
          {
            "label": "earnedFees",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:18"
          },
          {
            "label": "poolBalance",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:19"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "160",
            "type": "t_array(t_uint256)50_storage",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:21"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "211",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "213",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "214",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "312",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "462",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetaData)11561_storage)": {
            "label": "mapping(uint256 => struct ISystemPromptManager.TokenMetaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetaData)11561_storage": {
            "label": "struct ISystemPromptManager.TokenMetaData",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sysPrompts",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b6ce30254270c51e22dd025d5a5486dd6b6347d652a6b7c9e302c4dd117ce82d": {
      "address": "0xc4C4E6eA81A0a7ef4fd423354aCdd8935333142e",
      "txHash": "0xfd870eeae3e982b124142d995217e3e40309996a853d11c04317c0f9828523c5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3504_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:10"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:11"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Model)3018_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:13"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3031_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)3548_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(AddressSet)3548_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(AddressSet)3548_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3036_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:20"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3013_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:21"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:23"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:24"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:25"
          },
          {
            "label": "finePercentage",
            "offset": 10,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:26"
          },
          {
            "label": "maximumTier",
            "offset": 12,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:27"
          },
          {
            "label": "currentEpoch",
            "offset": 14,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:30"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:31"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:32"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:33"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:36"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(Boost)3045_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:39"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:40"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "19",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:41"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "21",
            "type": "t_array(t_uint256)100_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:44"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "121",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "121",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "172",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "222",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(AddressSet)3548_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)3045_storage)": {
            "label": "mapping(address => struct IStakingHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3018_storage)": {
            "label": "mapping(address => struct IStakingHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3036_storage)": {
            "label": "mapping(address => struct IStakingHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3031_storage)": {
            "label": "mapping(address => struct IStakingHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3013_storage)": {
            "label": "mapping(uint256 => struct IStakingHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3548_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Boost)3045_storage": {
            "label": "struct IStakingHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MinerEpochState)3013_storage": {
            "label": "struct IStakingHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3018_storage": {
            "label": "struct IStakingHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)3504_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)3036_storage": {
            "label": "struct IStakingHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3031_storage": {
            "label": "struct IStakingHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "54134d97a7d03daf068ea1800022eccddb660b61edaddecd74548bd7833dffd9": {
      "address": "0x96f2d0e84AB19f9B10B74557A522C0a1923935B0",
      "txHash": "0xa389068db693c5e9b186c32718d24dd0d1cdf8e592de219900d8bf21a000175b",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)3941_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:10"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:12"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Inference)3739_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:13"
          },
          {
            "label": "assignmentNumber",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:15"
          },
          {
            "label": "assignments",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_uint256,t_struct(Assignment)3691_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:16"
          },
          {
            "label": "votingInfo",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_uint256,t_struct(VotingInfo)3744_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:17"
          },
          {
            "label": "digests",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_uint256,t_struct(Bytes32Set)4325_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:18"
          },
          {
            "label": "countDigest",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:19"
          },
          {
            "label": "assignmentsByMiner",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_struct(Uint256Set)4155_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:20"
          },
          {
            "label": "assignmentsByInference",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_struct(Uint256Set)4155_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:21"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "10",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:23"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:24"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:25"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:26"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "11",
            "type": "t_uint16",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:27"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "11",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:28"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:29"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:30"
          },
          {
            "label": "minerRequirement",
            "offset": 10,
            "slot": "12",
            "type": "t_uint8",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:32"
          },
          {
            "label": "daoToken",
            "offset": 11,
            "slot": "12",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:34"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:35"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(DAOTokenPercentage)3773_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:36"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "15",
            "type": "t_mapping(t_address,t_address)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:38"
          },
          {
            "label": "daoReceiversInfo",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3871_storage)dyn_storage)",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:40"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "17",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:42"
          },
          {
            "label": "stakingHub",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:43"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "19",
            "type": "t_array(t_uint256)100_storage",
            "contract": "WorkerHubStorage",
            "src": "contracts/storages/WorkerHubStorage.sol:45"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "119",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "119",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "120",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "170",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "171",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "220",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "221",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "270",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "271",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(DAOTokenReceiverInfor)3871_storage)dyn_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(AssignmentRole)3668": {
            "label": "enum IWorkerHub.AssignmentRole",
            "members": [
              "Nil",
              "Validating",
              "Mining"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(DAOTokenReceiverRole)3863": {
            "label": "enum IWorkerHub.DAOTokenReceiverRole",
            "members": [
              "Miner",
              "Validator",
              "User",
              "Referrer",
              "Referee",
              "L2Owner"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)3664": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed",
              "Transferred"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(Vote)3672": {
            "label": "enum IWorkerHub.Vote",
            "members": [
              "Nil",
              "Disapproval",
              "Approval"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)4155_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)3871_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.DAOTokenReceiverInfor[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Assignment)3691_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Assignment)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Bytes32Set)4325_storage)": {
            "label": "mapping(uint256 => struct Set.Bytes32Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)3739_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Uint256Set)4155_storage)": {
            "label": "mapping(uint256 => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(VotingInfo)3744_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.VotingInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Assignment)3691_storage": {
            "label": "struct IWorkerHub.Assignment",
            "members": [
              {
                "label": "inferenceId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "digest",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "revealNonce",
                "type": "t_uint40",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "worker",
                "type": "t_address",
                "offset": 5,
                "slot": "3"
              },
              {
                "label": "role",
                "type": "t_enum(AssignmentRole)3668",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "vote",
                "type": "t_enum(Vote)3672",
                "offset": 26,
                "slot": "3"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)4325_storage": {
            "label": "struct Set.Bytes32Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(DAOTokenPercentage)3773_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOTokenReceiverInfor)3871_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "role",
                "type": "t_enum(DAOTokenReceiverRole)3863",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)3739_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "assignments",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "commitTimeout",
                "type": "t_uint40",
                "offset": 25,
                "slot": "5"
              },
              {
                "label": "revealTimeout",
                "type": "t_uint40",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)3664",
                "offset": 5,
                "slot": "6"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 6,
                "slot": "6"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Randomizer)3941_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)4155_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VotingInfo)3744_storage": {
            "label": "struct IWorkerHub.VotingInfo",
            "members": [
              {
                "label": "totalCommit",
                "type": "t_uint8",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalReveal",
                "type": "t_uint8",
                "offset": 1,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "b67ffeeac8cf14244fd173cb7953a5c2d858ffe614b5e46dde3b0423c22fd54a": {
      "address": "0x20AF99279a8543b882e8769FB43F3aa7efc23074",
      "txHash": "0x8d7e04e379fd274a46a75e8e70ea0e1fa4d36be574cbaa049f31416aa4964367",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "datas",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(TokenMetaData)6252_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:7"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:13"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:14"
          },
          {
            "label": "hybridModel",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:15"
          },
          {
            "label": "earnedFees",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:18"
          },
          {
            "label": "poolBalance",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:19"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:22"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "211",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "213",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "214",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "312",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "462",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetaData)6252_storage)": {
            "label": "mapping(uint256 => struct ISystemPromptManager.TokenMetaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetaData)6252_storage": {
            "label": "struct ISystemPromptManager.TokenMetaData",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sysPrompts",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "196532218d8e4cbac0af20108e700934052be0213fa885e67d7b726817f7ed52": {
      "address": "0x2f5C91E35b40E165BBa6771f4f33F49dD6a4f97d",
      "txHash": "0x2f3c86a8c1e468c86b24fafa7da4025f13d45fc56c52e10b9d9bb26336410bf9",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "datas",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(TokenMetaData)11834_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:7"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:13"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:14"
          },
          {
            "label": "hybridModel",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:15"
          },
          {
            "label": "earnedFees",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:18"
          },
          {
            "label": "poolBalance",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:19"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:20"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "161",
            "type": "t_array(t_uint256)49_storage",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:22"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "211",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "213",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "214",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "312",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "462",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetaData)11834_storage)": {
            "label": "mapping(uint256 => struct ISystemPromptManager.TokenMetaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetaData)11834_storage": {
            "label": "struct ISystemPromptManager.TokenMetaData",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sysPrompts",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}