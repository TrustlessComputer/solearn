{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0xDd99796EAb2A3E48aFef3559772DDc03bCAE7b20",
      "txHash": "0xf3d6e68d4e4f2d7824a6a3642910ccb066d103eb11181c97b70a823431e17640",
      "kind": "transparent"
    },
    {
      "address": "0xa5D6B605E40227aec1740e5cf9fAE3D8f3B0a355",
      "txHash": "0xe4358bc396f438cfdceca4e35a53a20560ff684b2a1c48942e234b866a5d89ce",
      "kind": "transparent"
    },
    {
      "address": "0xa01eF70EDc59F4DF3b47A6181f07932Fcc827553",
      "txHash": "0x2282eb4e0cb6d957389cb900e70ca74b1a82d3812530f6e358ca3f7f9fd988ef",
      "kind": "transparent"
    },
    {
      "address": "0xce3A37aAa9Dd0248cC393A12844b02D27475E60F",
      "txHash": "0x9b51efcbc823f1c402fe70a96fd340d8240020c19288ea35a1d21cf2b8caf143",
      "kind": "transparent"
    },
    {
      "address": "0xBb06A2Cb41c95b3041B0E102a38b02Ff0c5Fa921",
      "txHash": "0x1b01d34d24d90a146d2d61a4cebb7e34ea1507518697d54e3066fcb982e734df",
      "kind": "transparent"
    },
    {
      "address": "0x9C5007EC2f131Dd0D5316E40a1C1B554a00F5224",
      "txHash": "0x5e96ef5510fedb8939f60dddbc2b3b7dcd580291fab7553db0b9f9c2b9ea0b7f",
      "kind": "transparent"
    },
    {
      "address": "0xDC6DEA9DD3576312bcB437872B09eb3e658D5b0B",
      "txHash": "0xb180a675c8e7b9b174f3de63c95426483339927f1aeb8ece91cd6fde06e7e9f7",
      "kind": "transparent"
    }
  ],
  "impls": {
    "754f212c65bf8f797afeb6368e52dbc28d708f0e33632edc9a84456cdc7b1048": {
      "address": "0x8e7330dB373ba588f7EC8337d81E7E3dE88Ef06f",
      "txHash": "0x9645e0f95a0f70b2c5e4df49eb76d39eb34cbd4f3f0f7eeb47199325ed4c2a0c",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IWorkerHub)12337",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:10"
          },
          {
            "label": "MAX_SUPPLY_CAP",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:11"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)100_storage",
            "contract": "DAOToken",
            "src": "contracts/tokens/DAOToken.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IWorkerHub)12337": {
            "label": "contract IWorkerHub",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7d9d2e275d49150ede39864b97154beb41566b2149228b95e457f97ae38a48fa": {
      "address": "0x612520568FC7425C408FAbc3e3ec8E1a2c1d714b",
      "txHash": "0x6aba2af07807a9c642928fb3103ae4a6c06624f0237d6b4fe3842647fa126ae2",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:10"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)100_storage",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:11"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9136699ee7ad3b61379744babb7da6cebbb42bb2a5c33a04b1f26b2215c5e756": {
      "address": "0xdb064B9bE46dd022e6D85302ce506b31ab1A6B40",
      "txHash": "0x54bfca41bd379265349274a8f736d1f39b47667da8a5470504f76a1964b7de20",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)4424_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:10"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "1",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:11"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_struct(Model)3951_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:13"
          },
          {
            "label": "miners",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Worker)3964_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:14"
          },
          {
            "label": "minerAddressesByModel",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_struct(AddressSet)4468_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:15"
          },
          {
            "label": "modelAddresses",
            "offset": 0,
            "slot": "5",
            "type": "t_struct(AddressSet)4468_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:17"
          },
          {
            "label": "minerAddresses",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(AddressSet)4468_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:18"
          },
          {
            "label": "minerUnstakeRequests",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_struct(UnstakeRequest)3969_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:20"
          },
          {
            "label": "rewardInEpoch",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_struct(MinerEpochState)3946_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:21"
          },
          {
            "label": "minerMinimumStake",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:23"
          },
          {
            "label": "unstakeDelayTime",
            "offset": 0,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:24"
          },
          {
            "label": "penaltyDuration",
            "offset": 5,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:25"
          },
          {
            "label": "finePercentage",
            "offset": 10,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:26"
          },
          {
            "label": "maximumTier",
            "offset": 12,
            "slot": "12",
            "type": "t_uint16",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:27"
          },
          {
            "label": "currentEpoch",
            "offset": 14,
            "slot": "12",
            "type": "t_uint40",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:30"
          },
          {
            "label": "blocksPerEpoch",
            "offset": 0,
            "slot": "13",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:31"
          },
          {
            "label": "lastBlock",
            "offset": 0,
            "slot": "14",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:32"
          },
          {
            "label": "rewardPerEpoch",
            "offset": 0,
            "slot": "15",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:33"
          },
          {
            "label": "minerRewards",
            "offset": 0,
            "slot": "16",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:36"
          },
          {
            "label": "boost",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(Boost)3978_storage)",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:39"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "18",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:40"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "19",
            "type": "t_address",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:41"
          },
          {
            "label": "minFeeToUse",
            "offset": 0,
            "slot": "20",
            "type": "t_uint256",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:42"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "21",
            "type": "t_array(t_uint256)100_storage",
            "contract": "StakingHubStorage",
            "src": "contracts/storages/StakingHubStorage.sol:44"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "121",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "121",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "122",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "172",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "173",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "222",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "223",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "272",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "273",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_struct(AddressSet)4468_storage)": {
            "label": "mapping(address => struct Set.AddressSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Boost)3978_storage)": {
            "label": "mapping(address => struct IStakingHub.Boost)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Model)3951_storage)": {
            "label": "mapping(address => struct IStakingHub.Model)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UnstakeRequest)3969_storage)": {
            "label": "mapping(address => struct IStakingHub.UnstakeRequest)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Worker)3964_storage)": {
            "label": "mapping(address => struct IStakingHub.Worker)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(MinerEpochState)3946_storage)": {
            "label": "mapping(uint256 => struct IStakingHub.MinerEpochState)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)4468_storage": {
            "label": "struct Set.AddressSet",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Boost)3978_storage": {
            "label": "struct IStakingHub.Boost",
            "members": [
              {
                "label": "minerTimestamp",
                "type": "t_uint40",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "validatorTimestamp",
                "type": "t_uint40",
                "offset": 5,
                "slot": "0"
              },
              {
                "label": "reserved1",
                "type": "t_uint48",
                "offset": 10,
                "slot": "0"
              },
              {
                "label": "reserved2",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(MinerEpochState)3946_storage": {
            "label": "struct IStakingHub.MinerEpochState",
            "members": [
              {
                "label": "perfReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "epochReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "totalTaskCompleted",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalMiner",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(Model)3951_storage": {
            "label": "struct IStakingHub.Model",
            "members": [
              {
                "label": "minimumFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tier",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Randomizer)4424_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(UnstakeRequest)3969_storage": {
            "label": "struct IStakingHub.UnstakeRequest",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unlockAt",
                "type": "t_uint40",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Worker)3964_storage": {
            "label": "struct IStakingHub.Worker",
            "members": [
              {
                "label": "stake",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "commitment",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lastClaimedEpoch",
                "type": "t_uint40",
                "offset": 20,
                "slot": "2"
              },
              {
                "label": "activeTime",
                "type": "t_uint40",
                "offset": 25,
                "slot": "2"
              },
              {
                "label": "tier",
                "type": "t_uint16",
                "offset": 30,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2416121c09b7754ddee6e2a45e4dd39b70528128e31802316ad020d52fdb06db": {
      "address": "0xe2Ce1FD19dfb0F19eEAe8e7Ba33e372a72e83F85",
      "txHash": "0x50023c988f9ce577b7f04a518000aa3303b82c58f119dd6dec39c23630e6222d",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "randomizer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Randomizer)4424_storage",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:10"
          },
          {
            "label": "inferenceNumber",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:12"
          },
          {
            "label": "inferences",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_uint256,t_struct(Inference)4222_storage)",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:13"
          },
          {
            "label": "inferencesByMiner",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_struct(Uint256Set)4638_storage)",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:14"
          },
          {
            "label": "l2Owner",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:16"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "5",
            "type": "t_address",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:17"
          },
          {
            "label": "feeL2Percentage",
            "offset": 20,
            "slot": "5",
            "type": "t_uint16",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:18"
          },
          {
            "label": "feeTreasuryPercentage",
            "offset": 22,
            "slot": "5",
            "type": "t_uint16",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:19"
          },
          {
            "label": "feeRatioMinerValidator",
            "offset": 24,
            "slot": "5",
            "type": "t_uint16",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:20"
          },
          {
            "label": "submitDuration",
            "offset": 26,
            "slot": "5",
            "type": "t_uint40",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:21"
          },
          {
            "label": "commitDuration",
            "offset": 0,
            "slot": "6",
            "type": "t_uint40",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:22"
          },
          {
            "label": "revealDuration",
            "offset": 5,
            "slot": "6",
            "type": "t_uint40",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:23"
          },
          {
            "label": "minerRequirement",
            "offset": 10,
            "slot": "6",
            "type": "t_uint8",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:24"
          },
          {
            "label": "daoTokenPercentage",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(DAOTokenPercentage)4238_storage",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:25"
          },
          {
            "label": "daoTokenReward",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:27"
          },
          {
            "label": "referrerOf",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_address,t_address)",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:29"
          },
          {
            "label": "daoReceiversInfo",
            "offset": 0,
            "slot": "10",
            "type": "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)4338_storage)dyn_storage)",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:31"
          },
          {
            "label": "wEAI",
            "offset": 0,
            "slot": "11",
            "type": "t_address",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:34"
          },
          {
            "label": "stakingHub",
            "offset": 0,
            "slot": "12",
            "type": "t_address",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:35"
          },
          {
            "label": "daoToken",
            "offset": 0,
            "slot": "13",
            "type": "t_address",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "14",
            "type": "t_array(t_uint256)100_storage",
            "contract": "PromptSchedulerStorage",
            "src": "contracts/storages/PromptSchedulerStorage.sol:38"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "114",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "114",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "115",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "165",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "166",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "215",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "216",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "265",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(DAOTokenReceiverInfor)4338_storage)dyn_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)100_storage": {
            "label": "uint256[100]",
            "numberOfBytes": "3200"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_enum(DAOTokenReceiverRole)4330": {
            "label": "enum IWorkerHub.DAOTokenReceiverRole",
            "members": [
              "Miner",
              "Validator",
              "User",
              "Referrer",
              "Referee",
              "L2Owner"
            ],
            "numberOfBytes": "1"
          },
          "t_enum(InferenceStatus)4190": {
            "label": "enum IWorkerHub.InferenceStatus",
            "members": [
              "Nil",
              "Solving",
              "Commit",
              "Reveal",
              "Processed",
              "Killed",
              "Transferred"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Uint256Set)4638_storage)": {
            "label": "mapping(address => struct Set.Uint256Set)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_struct(DAOTokenReceiverInfor)4338_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.DAOTokenReceiverInfor[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Inference)4222_storage)": {
            "label": "mapping(uint256 => struct IWorkerHub.Inference)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(DAOTokenPercentage)4238_storage": {
            "label": "struct IWorkerHub.DAOTokenPercentage",
            "members": [
              {
                "label": "minerPercentage",
                "type": "t_uint16",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "userPercentage",
                "type": "t_uint16",
                "offset": 2,
                "slot": "0"
              },
              {
                "label": "referrerPercentage",
                "type": "t_uint16",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "refereePercentage",
                "type": "t_uint16",
                "offset": 6,
                "slot": "0"
              },
              {
                "label": "l2OwnerPercentage",
                "type": "t_uint16",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(DAOTokenReceiverInfor)4338_storage": {
            "label": "struct IWorkerHub.DAOTokenReceiverInfor",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "role",
                "type": "t_enum(DAOTokenReceiverRole)4330",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Inference)4222_storage": {
            "label": "struct IWorkerHub.Inference",
            "members": [
              {
                "label": "value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "feeL2",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "feeTreasury",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "modelAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "submitTimeout",
                "type": "t_uint40",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "status",
                "type": "t_enum(InferenceStatus)4190",
                "offset": 25,
                "slot": "3"
              },
              {
                "label": "creator",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "processedMiner",
                "type": "t_address",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "referrer",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "input",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "output",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "8"
              }
            ],
            "numberOfBytes": "288"
          },
          "t_struct(Randomizer)4424_storage": {
            "label": "struct Random.Randomizer",
            "members": [
              {
                "label": "nonce",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Uint256Set)4638_storage": {
            "label": "struct Set.Uint256Set",
            "members": [
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "positions",
                "type": "t_mapping(t_uint256,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint40": {
            "label": "uint40",
            "numberOfBytes": "5"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "2e85ce0e411df4df25a565e95af5c5d5b2ba84a140bc8e39aa3247a0a5ff7546": {
      "address": "0xD938121eDe93D54f24CA4373185745b74Fc2d20C",
      "txHash": "0xb9caba45a4be1481fdf9b9d1ff20b6752e64ece0b5b3bcfe1ed9254f43b27df5",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "models",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:7"
          },
          {
            "label": "nextModelId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ModelCollectionStorage",
            "src": "contracts/storages/ModelCollectionStorage.sol:15"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "205",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "206",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "207",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "208",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "209",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "257",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "258",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "259",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "260",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "261",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "307",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "308",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "357",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "407",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "408",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "457",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "458",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "044f491d11693cb72837c8ab663cba31fe2bd079a35b21c41e8b98f42833ce9d": {
      "address": "0x2928fC3732C624Ec25191740bC928BdBE9924860",
      "txHash": "0x144106f7b4563af2a820d1dc0c23d67b5f6fbbbb073fad731aa5fe3152aa1f28",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "identifier",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:7"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:9"
          },
          {
            "label": "metadata",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:10"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "3",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:12"
          },
          {
            "label": "modelCollection",
            "offset": 0,
            "slot": "4",
            "type": "t_address",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:13"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_uint256)49_storage",
            "contract": "HybridModelStorage",
            "src": "contracts/storages/HybridModelStorage.sol:15"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "54",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "54",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "106",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "205",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "206",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5f7f3d9e19251452b0c099fd016a873a87d960c48e50f6c47510026061c0281a": {
      "address": "0xc21a32BCe4572243400E8841D2Be4234f4F43377",
      "txHash": "0xa6d0dbac19368e86a28cc22da2a576429e3ff0b64e19550e32abd47042d769c4",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "datas",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_uint256,t_struct(TokenMetaData)11908_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:7"
          },
          {
            "label": "nextTokenId",
            "offset": 0,
            "slot": "152",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:8"
          },
          {
            "label": "mintPrice",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:9"
          },
          {
            "label": "royaltyReceiver",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:10"
          },
          {
            "label": "royaltyPortion",
            "offset": 20,
            "slot": "154",
            "type": "t_uint16",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:11"
          },
          {
            "label": "isManager",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:13"
          },
          {
            "label": "workerHub",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:14"
          },
          {
            "label": "hybridModel",
            "offset": 0,
            "slot": "157",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:15"
          },
          {
            "label": "earnedFees",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:18"
          },
          {
            "label": "poolBalance",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:19"
          },
          {
            "label": "nonce",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:20"
          },
          {
            "label": "signaturesUsed",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:21"
          },
          {
            "label": "missionsOf",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:24"
          },
          {
            "label": "squadManager",
            "offset": 0,
            "slot": "163",
            "type": "t_address",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:25"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "164",
            "type": "t_array(t_uint256)46_storage",
            "contract": "SystemPromptManagerStorage",
            "src": "contracts/storages/SystemPromptManagerStorage.sol:27"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "210",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "211",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "212",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "213",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "214",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "262",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "263",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "264",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "265",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "266",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "312",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "313",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "362",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721PausableUpgradeable.sol:53"
          },
          {
            "label": "_tokenURIs",
            "offset": 0,
            "slot": "412",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:17"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "413",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC721URIStorageUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721URIStorageUpgradeable.sol:86"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "462",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_memory_ptr": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_bytes_memory_ptr,t_bool))": {
            "label": "mapping(address => mapping(bytes => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes_memory_ptr,t_bool)": {
            "label": "mapping(bytes => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_array(t_bytes_storage)dyn_storage)": {
            "label": "mapping(uint256 => bytes[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(TokenMetaData)11908_storage)": {
            "label": "mapping(uint256 => struct ISystemPromptManager.TokenMetaData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(TokenMetaData)11908_storage": {
            "label": "struct ISystemPromptManager.TokenMetaData",
            "members": [
              {
                "label": "fee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sysPrompts",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
